package gb

var (
	opcodeToInst = map[uint8]func(*cpu) uint8{
		0x00: func(c *cpu) uint8 { return c.nop() },
		0x01: func(c *cpu) uint8 { return c.ld_rr_nn(reg_bc) },
		0x02: func(c *cpu) uint8 { return c.ld_BC_a() },
		0x03: func(c *cpu) uint8 { return c.inc_rr(reg_bc) },
		0x04: func(c *cpu) uint8 { return c.inc_r(reg_b) },
		0x05: func(c *cpu) uint8 { return c.dec_r(reg_b) },
		0x06: func(c *cpu) uint8 { return c.ld_r_n(reg_b) },
		0x07: func(c *cpu) uint8 { return c.rlca() },
		0x08: func(c *cpu) uint8 { return c.ld_NN_sp() },
		0x09: func(c *cpu) uint8 { return c.add_hl_rr(reg_bc) },
		0x0A: func(c *cpu) uint8 { return c.ld_a_BC() },
		0x0B: func(c *cpu) uint8 { return c.dec_rr(reg_bc) },
		0x0C: func(c *cpu) uint8 { return c.inc_r(reg_c) },
		0x0D: func(c *cpu) uint8 { return c.dec_r(reg_c) },
		0x0E: func(c *cpu) uint8 { return c.ld_r_n(reg_c) },
		0x0F: func(c *cpu) uint8 { return c.rrca() },
		0x10: func(c *cpu) uint8 { return c.stop() },
		0x11: func(c *cpu) uint8 { return c.ld_rr_nn(reg_de) },
		0x12: func(c *cpu) uint8 { return c.ld_DE_a() },
		0x13: func(c *cpu) uint8 { return c.inc_rr(reg_de) },
		0x14: func(c *cpu) uint8 { return c.inc_r(reg_d) },
		0x15: func(c *cpu) uint8 { return c.dec_r(reg_d) },
		0x16: func(c *cpu) uint8 { return c.ld_r_n(reg_d) },
		0x17: func(c *cpu) uint8 { return c.rla() },
		0x18: func(c *cpu) uint8 { return c.jr_PC_dd() },
		0x19: func(c *cpu) uint8 { return c.add_hl_rr(reg_de) },
		0x1A: func(c *cpu) uint8 { return c.ld_a_DE() },
		0x1B: func(c *cpu) uint8 { return c.dec_rr(reg_de) },
		0x1C: func(c *cpu) uint8 { return c.inc_r(reg_e) },
		0x1D: func(c *cpu) uint8 { return c.dec_r(reg_e) },
		0x1E: func(c *cpu) uint8 { return c.ld_r_n(reg_e) },
		0x1F: func(c *cpu) uint8 { return c.rra() },
		0x20: func(c *cpu) uint8 { return c.jr_f_PC_dd(conditionNZ) },
		0x21: func(c *cpu) uint8 { return c.ld_rr_nn(reg_hl) },
		0x22: func(c *cpu) uint8 { return c.ldi_HL_a() },
		0x23: func(c *cpu) uint8 { return c.inc_rr(reg_hl) },
		0x24: func(c *cpu) uint8 { return c.inc_r(reg_h) },
		0x25: func(c *cpu) uint8 { return c.dec_r(reg_h) },
		0x26: func(c *cpu) uint8 { return c.ld_r_n(reg_h) },
		0x27: func(c *cpu) uint8 { return c.daa() },
		0x28: func(c *cpu) uint8 { return c.jr_f_PC_dd(conditionZ) },
		0x29: func(c *cpu) uint8 { return c.add_hl_rr(reg_hl) },
		0x2A: func(c *cpu) uint8 { return c.ldi_a_HL() },
		0x2B: func(c *cpu) uint8 { return c.dec_rr(reg_hl) },
		0x2C: func(c *cpu) uint8 { return c.inc_r(reg_l) },
		0x2D: func(c *cpu) uint8 { return c.dec_r(reg_l) },
		0x2E: func(c *cpu) uint8 { return c.ld_r_n(reg_l) },
		0x2F: func(c *cpu) uint8 { return c.cpl() },
		0x30: func(c *cpu) uint8 { return c.jr_f_PC_dd(conditionNC) },
		0x31: func(c *cpu) uint8 { return c.ld_rr_nn(reg_sp) },
		0x32: func(c *cpu) uint8 { return c.ldd_HL_a() },
		0x33: func(c *cpu) uint8 { return c.inc_rr(reg_sp) },
		0x34: func(c *cpu) uint8 { return c.inc_HL() },
		0x35: func(c *cpu) uint8 { return c.dec_HL() },
		0x36: func(c *cpu) uint8 { return c.ld_HL_n() },
		0x37: func(c *cpu) uint8 { return c.scf() },
		0x38: func(c *cpu) uint8 { return c.jr_f_PC_dd(conditionC) },
		0x39: func(c *cpu) uint8 { return c.add_hl_rr(reg_sp) },
		0x3A: func(c *cpu) uint8 { return c.ldd_a_HL() },
		0x3B: func(c *cpu) uint8 { return c.dec_rr(reg_sp) },
		0x3C: func(c *cpu) uint8 { return c.inc_r(reg_a) },
		0x3D: func(c *cpu) uint8 { return c.dec_r(reg_a) },
		0x3E: func(c *cpu) uint8 { return c.ld_r_n(reg_a) },
		0x3F: func(c *cpu) uint8 { return c.ccf() },
		0x40: func(c *cpu) uint8 { return c.ld_r_r(reg_b, reg_b) },
		0x41: func(c *cpu) uint8 { return c.ld_r_r(reg_b, reg_c) },
		0x42: func(c *cpu) uint8 { return c.ld_r_r(reg_b, reg_d) },
		0x43: func(c *cpu) uint8 { return c.ld_r_r(reg_b, reg_e) },
		0x44: func(c *cpu) uint8 { return c.ld_r_r(reg_b, reg_h) },
		0x45: func(c *cpu) uint8 { return c.ld_r_r(reg_b, reg_l) },
		0x46: func(c *cpu) uint8 { return c.ld_r_HL(reg_b) },
		0x47: func(c *cpu) uint8 { return c.ld_r_r(reg_b, reg_a) },
		0x48: func(c *cpu) uint8 { return c.ld_r_r(reg_c, reg_b) },
		0x49: func(c *cpu) uint8 { return c.ld_r_r(reg_c, reg_c) },
		0x4A: func(c *cpu) uint8 { return c.ld_r_r(reg_c, reg_d) },
		0x4B: func(c *cpu) uint8 { return c.ld_r_r(reg_c, reg_e) },
		0x4C: func(c *cpu) uint8 { return c.ld_r_r(reg_c, reg_h) },
		0x4D: func(c *cpu) uint8 { return c.ld_r_r(reg_c, reg_l) },
		0x4E: func(c *cpu) uint8 { return c.ld_r_HL(reg_c) },
		0x4F: func(c *cpu) uint8 { return c.ld_r_r(reg_c, reg_a) },
		0x50: func(c *cpu) uint8 { return c.ld_r_r(reg_d, reg_b) },
		0x51: func(c *cpu) uint8 { return c.ld_r_r(reg_d, reg_c) },
		0x52: func(c *cpu) uint8 { return c.ld_r_r(reg_d, reg_d) },
		0x53: func(c *cpu) uint8 { return c.ld_r_r(reg_d, reg_e) },
		0x54: func(c *cpu) uint8 { return c.ld_r_r(reg_d, reg_h) },
		0x55: func(c *cpu) uint8 { return c.ld_r_r(reg_d, reg_l) },
		0x56: func(c *cpu) uint8 { return c.ld_r_HL(reg_d) },
		0x57: func(c *cpu) uint8 { return c.ld_r_r(reg_d, reg_a) },
		0x58: func(c *cpu) uint8 { return c.ld_r_r(reg_e, reg_b) },
		0x59: func(c *cpu) uint8 { return c.ld_r_r(reg_e, reg_c) },
		0x5A: func(c *cpu) uint8 { return c.ld_r_r(reg_e, reg_d) },
		0x5B: func(c *cpu) uint8 { return c.ld_r_r(reg_e, reg_e) },
		0x5C: func(c *cpu) uint8 { return c.ld_r_r(reg_e, reg_h) },
		0x5D: func(c *cpu) uint8 { return c.ld_r_r(reg_e, reg_l) },
		0x5E: func(c *cpu) uint8 { return c.ld_r_HL(reg_e) },
		0x5F: func(c *cpu) uint8 { return c.ld_r_r(reg_e, reg_a) },
		0x60: func(c *cpu) uint8 { return c.ld_r_r(reg_h, reg_b) },
		0x61: func(c *cpu) uint8 { return c.ld_r_r(reg_h, reg_c) },
		0x62: func(c *cpu) uint8 { return c.ld_r_r(reg_h, reg_d) },
		0x63: func(c *cpu) uint8 { return c.ld_r_r(reg_h, reg_e) },
		0x64: func(c *cpu) uint8 { return c.ld_r_r(reg_h, reg_h) },
		0x65: func(c *cpu) uint8 { return c.ld_r_r(reg_h, reg_l) },
		0x66: func(c *cpu) uint8 { return c.ld_r_HL(reg_h) },
		0x67: func(c *cpu) uint8 { return c.ld_r_r(reg_h, reg_a) },
		0x68: func(c *cpu) uint8 { return c.ld_r_r(reg_l, reg_b) },
		0x69: func(c *cpu) uint8 { return c.ld_r_r(reg_l, reg_c) },
		0x6A: func(c *cpu) uint8 { return c.ld_r_r(reg_l, reg_d) },
		0x6B: func(c *cpu) uint8 { return c.ld_r_r(reg_l, reg_e) },
		0x6C: func(c *cpu) uint8 { return c.ld_r_r(reg_l, reg_h) },
		0x6D: func(c *cpu) uint8 { return c.ld_r_r(reg_l, reg_l) },
		0x6E: func(c *cpu) uint8 { return c.ld_r_HL(reg_l) },
		0x6F: func(c *cpu) uint8 { return c.ld_r_r(reg_l, reg_a) },
		0x70: func(c *cpu) uint8 { return c.ld_HL_r(reg_b) },
		0x71: func(c *cpu) uint8 { return c.ld_HL_r(reg_c) },
		0x72: func(c *cpu) uint8 { return c.ld_HL_r(reg_d) },
		0x73: func(c *cpu) uint8 { return c.ld_HL_r(reg_e) },
		0x74: func(c *cpu) uint8 { return c.ld_HL_r(reg_h) },
		0x75: func(c *cpu) uint8 { return c.ld_HL_r(reg_l) },
		0x76: func(c *cpu) uint8 { return c.halt() },
		0x77: func(c *cpu) uint8 { return c.ld_HL_r(reg_a) },
		0x78: func(c *cpu) uint8 { return c.ld_r_r(reg_a, reg_b) },
		0x79: func(c *cpu) uint8 { return c.ld_r_r(reg_a, reg_c) },
		0x7A: func(c *cpu) uint8 { return c.ld_r_r(reg_a, reg_d) },
		0x7B: func(c *cpu) uint8 { return c.ld_r_r(reg_a, reg_e) },
		0x7C: func(c *cpu) uint8 { return c.ld_r_r(reg_a, reg_h) },
		0x7D: func(c *cpu) uint8 { return c.ld_r_r(reg_a, reg_l) },
		0x7E: func(c *cpu) uint8 { return c.ld_r_HL(reg_a) },
		0x7F: func(c *cpu) uint8 { return c.ld_r_r(reg_a, reg_a) },
		0x80: func(c *cpu) uint8 { return c.add_a_r(reg_b) },
		0x81: func(c *cpu) uint8 { return c.add_a_r(reg_c) },
		0x82: func(c *cpu) uint8 { return c.add_a_r(reg_d) },
		0x83: func(c *cpu) uint8 { return c.add_a_r(reg_e) },
		0x84: func(c *cpu) uint8 { return c.add_a_r(reg_h) },
		0x85: func(c *cpu) uint8 { return c.add_a_r(reg_l) },
		0x86: func(c *cpu) uint8 { return c.add_a_HL() },
		0x87: func(c *cpu) uint8 { return c.add_a_r(reg_a) },
		0x88: func(c *cpu) uint8 { return c.adc_a_r(reg_b) },
		0x89: func(c *cpu) uint8 { return c.adc_a_r(reg_c) },
		0x8A: func(c *cpu) uint8 { return c.adc_a_r(reg_d) },
		0x8B: func(c *cpu) uint8 { return c.adc_a_r(reg_e) },
		0x8C: func(c *cpu) uint8 { return c.adc_a_r(reg_h) },
		0x8D: func(c *cpu) uint8 { return c.adc_a_r(reg_l) },
		0x8E: func(c *cpu) uint8 { return c.adc_a_HL() },
		0x8F: func(c *cpu) uint8 { return c.adc_a_r(reg_a) },
		0x90: func(c *cpu) uint8 { return c.sub_r(reg_b) },
		0x91: func(c *cpu) uint8 { return c.sub_r(reg_c) },
		0x92: func(c *cpu) uint8 { return c.sub_r(reg_d) },
		0x93: func(c *cpu) uint8 { return c.sub_r(reg_e) },
		0x94: func(c *cpu) uint8 { return c.sub_r(reg_h) },
		0x95: func(c *cpu) uint8 { return c.sub_r(reg_l) },
		0x96: func(c *cpu) uint8 { return c.sub_HL() },
		0x97: func(c *cpu) uint8 { return c.sub_r(reg_a) },
		0x98: func(c *cpu) uint8 { return c.sbc_a_r(reg_b) },
		0x99: func(c *cpu) uint8 { return c.sbc_a_r(reg_c) },
		0x9A: func(c *cpu) uint8 { return c.sbc_a_r(reg_d) },
		0x9B: func(c *cpu) uint8 { return c.sbc_a_r(reg_e) },
		0x9C: func(c *cpu) uint8 { return c.sbc_a_r(reg_h) },
		0x9D: func(c *cpu) uint8 { return c.sbc_a_r(reg_l) },
		0x9E: func(c *cpu) uint8 { return c.sbc_a_HL() },
		0x9F: func(c *cpu) uint8 { return c.sbc_a_r(reg_a) },
		0xA0: func(c *cpu) uint8 { return c.and_r(reg_b) },
		0xA1: func(c *cpu) uint8 { return c.and_r(reg_c) },
		0xA2: func(c *cpu) uint8 { return c.and_r(reg_d) },
		0xA3: func(c *cpu) uint8 { return c.and_r(reg_e) },
		0xA4: func(c *cpu) uint8 { return c.and_r(reg_h) },
		0xA5: func(c *cpu) uint8 { return c.and_r(reg_l) },
		0xA6: func(c *cpu) uint8 { return c.and_HL() },
		0xA7: func(c *cpu) uint8 { return c.and_r(reg_a) },
		0xA8: func(c *cpu) uint8 { return c.xor_r(reg_b) },
		0xA9: func(c *cpu) uint8 { return c.xor_r(reg_c) },
		0xAA: func(c *cpu) uint8 { return c.xor_r(reg_d) },
		0xAB: func(c *cpu) uint8 { return c.xor_r(reg_e) },
		0xAC: func(c *cpu) uint8 { return c.xor_r(reg_h) },
		0xAD: func(c *cpu) uint8 { return c.xor_r(reg_l) },
		0xAE: func(c *cpu) uint8 { return c.xor_HL() },
		0xAF: func(c *cpu) uint8 { return c.xor_r(reg_a) },
		0xB0: func(c *cpu) uint8 { return c.or_r(reg_b) },
		0xB1: func(c *cpu) uint8 { return c.or_r(reg_c) },
		0xB2: func(c *cpu) uint8 { return c.or_r(reg_d) },
		0xB3: func(c *cpu) uint8 { return c.or_r(reg_e) },
		0xB4: func(c *cpu) uint8 { return c.or_r(reg_h) },
		0xB5: func(c *cpu) uint8 { return c.or_r(reg_l) },
		0xB6: func(c *cpu) uint8 { return c.or_HL() },
		0xB7: func(c *cpu) uint8 { return c.or_r(reg_a) },
		0xB8: func(c *cpu) uint8 { return c.cp_r(reg_b) },
		0xB9: func(c *cpu) uint8 { return c.cp_r(reg_c) },
		0xBA: func(c *cpu) uint8 { return c.cp_r(reg_d) },
		0xBB: func(c *cpu) uint8 { return c.cp_r(reg_e) },
		0xBC: func(c *cpu) uint8 { return c.cp_r(reg_h) },
		0xBD: func(c *cpu) uint8 { return c.cp_r(reg_l) },
		0xBE: func(c *cpu) uint8 { return c.cp_HL() },
		0xBF: func(c *cpu) uint8 { return c.cp_r(reg_a) },
		0xC0: func(c *cpu) uint8 { return c.ret_f(conditionNZ) },
		0xC1: func(c *cpu) uint8 { return c.pop_rr(reg_bc) },
		0xC2: func(c *cpu) uint8 { return c.jp_f_nn(conditionNZ) },
		0xC3: func(c *cpu) uint8 { return c.jp_nn() },
		0xC4: func(c *cpu) uint8 { return c.call_f_nn(conditionNZ) },
		0xC5: func(c *cpu) uint8 { return c.push_rr(reg_bc) },
		0xC6: func(c *cpu) uint8 { return c.add_a_n() },
		0xC7: func(c *cpu) uint8 { return c.rst_n(0x00) },
		0xC8: func(c *cpu) uint8 { return c.ret_f(conditionZ) },
		0xC9: func(c *cpu) uint8 { return c.ret() },
		0xCA: func(c *cpu) uint8 { return c.jp_f_nn(conditionZ) },
		0xCB: func(c *cpu) uint8 { return c.cb_prefix() },
		0xCC: func(c *cpu) uint8 { return c.call_f_nn(conditionZ) },
		0xCD: func(c *cpu) uint8 { return c.call_nn() },
		0xCE: func(c *cpu) uint8 { return c.adc_a_n() },
		0xCF: func(c *cpu) uint8 { return c.rst_n(0x08) },
		0xD0: func(c *cpu) uint8 { return c.ret_f(conditionNC) },
		0xD1: func(c *cpu) uint8 { return c.pop_rr(reg_de) },
		0xD2: func(c *cpu) uint8 { return c.jp_f_nn(conditionNC) },
		0xD3: func(c *cpu) uint8 { return c.illegal() },
		0xD4: func(c *cpu) uint8 { return c.call_f_nn(conditionNC) },
		0xD5: func(c *cpu) uint8 { return c.push_rr(reg_de) },
		0xD6: func(c *cpu) uint8 { return c.sub_n() },
		0xD7: func(c *cpu) uint8 { return c.rst_n(0x10) },
		0xD8: func(c *cpu) uint8 { return c.ret_f(conditionC) },
		0xD9: func(c *cpu) uint8 { return c.reti() },
		0xDA: func(c *cpu) uint8 { return c.jp_f_nn(conditionC) },
		0xDB: func(c *cpu) uint8 { return c.illegal() },
		0xDC: func(c *cpu) uint8 { return c.call_f_nn(conditionC) },
		0xDD: func(c *cpu) uint8 { return c.illegal() },
		0xDE: func(c *cpu) uint8 { return c.sbc_a_n() },
		0xDF: func(c *cpu) uint8 { return c.rst_n(0x18) },
		0xE0: func(c *cpu) uint8 { return c.ld_ff00n_a() },
		0xE1: func(c *cpu) uint8 { return c.pop_rr(reg_hl) },
		0xE2: func(c *cpu) uint8 { return c.ld_ff00c_a() },
		0xE3: func(c *cpu) uint8 { return c.illegal() },
		0xE4: func(c *cpu) uint8 { return c.illegal() },
		0xE5: func(c *cpu) uint8 { return c.push_rr(reg_hl) },
		0xE6: func(c *cpu) uint8 { return c.and_n() },
		0xE7: func(c *cpu) uint8 { return c.rst_n(0x20) },
		0xE8: func(c *cpu) uint8 { return c.add_sp_dd() },
		0xE9: func(c *cpu) uint8 { return c.jp_HL() },
		0xEA: func(c *cpu) uint8 { return c.ld_NN_a() },
		0xEB: func(c *cpu) uint8 { return c.illegal() },
		0xEC: func(c *cpu) uint8 { return c.illegal() },
		0xED: func(c *cpu) uint8 { return c.illegal() },
		0xEE: func(c *cpu) uint8 { return c.xor_n() },
		0xEF: func(c *cpu) uint8 { return c.rst_n(0x28) },
		0xF0: func(c *cpu) uint8 { return c.ld_a_ff00n() },
		0xF1: func(c *cpu) uint8 { return c.pop_rr(reg_af) },
		0xF2: func(c *cpu) uint8 { return c.ld_a_ff00c() },
		0xF3: func(c *cpu) uint8 { return c.di() },
		0xF4: func(c *cpu) uint8 { return c.illegal() },
		0xF5: func(c *cpu) uint8 { return c.push_rr(reg_af) },
		0xF6: func(c *cpu) uint8 { return c.or_n() },
		0xF7: func(c *cpu) uint8 { return c.rst_n(0x30) },
		0xF8: func(c *cpu) uint8 { return c.ld_hl_sp_dd() },
		0xF9: func(c *cpu) uint8 { return c.ld_sp_hl() },
		0xFA: func(c *cpu) uint8 { return c.ld_a_NN() },
		0xFB: func(c *cpu) uint8 { return c.ei() },
		0xFC: func(c *cpu) uint8 { return c.illegal() },
		0xFD: func(c *cpu) uint8 { return c.illegal() },
		0xFE: func(c *cpu) uint8 { return c.cp_n() },
		0xFF: func(c *cpu) uint8 { return c.rst_n(0x38) },
	}
)

var (
	opcodeToCBInst = map[uint8]func(*cpu) uint8{
		0x00: func(c *cpu) uint8 { return c.rlc_r(reg_b) },
		0x01: func(c *cpu) uint8 { return c.rlc_r(reg_c) },
		0x02: func(c *cpu) uint8 { return c.rlc_r(reg_d) },
		0x03: func(c *cpu) uint8 { return c.rlc_r(reg_e) },
		0x04: func(c *cpu) uint8 { return c.rlc_r(reg_h) },
		0x05: func(c *cpu) uint8 { return c.rlc_r(reg_l) },
		0x06: func(c *cpu) uint8 { return c.rlc_HL() },
		0x07: func(c *cpu) uint8 { return c.rlc_r(reg_a) },
		0x08: func(c *cpu) uint8 { return c.rrc_r(reg_b) },
		0x09: func(c *cpu) uint8 { return c.rrc_r(reg_c) },
		0x0A: func(c *cpu) uint8 { return c.rrc_r(reg_d) },
		0x0B: func(c *cpu) uint8 { return c.rrc_r(reg_e) },
		0x0C: func(c *cpu) uint8 { return c.rrc_r(reg_h) },
		0x0D: func(c *cpu) uint8 { return c.rrc_r(reg_l) },
		0x0E: func(c *cpu) uint8 { return c.rrc_HL() },
		0x0F: func(c *cpu) uint8 { return c.rrc_r(reg_a) },
		0x10: func(c *cpu) uint8 { return c.rl_r(reg_b) },
		0x11: func(c *cpu) uint8 { return c.rl_r(reg_c) },
		0x12: func(c *cpu) uint8 { return c.rl_r(reg_d) },
		0x13: func(c *cpu) uint8 { return c.rl_r(reg_e) },
		0x14: func(c *cpu) uint8 { return c.rl_r(reg_h) },
		0x15: func(c *cpu) uint8 { return c.rl_r(reg_l) },
		0x16: func(c *cpu) uint8 { return c.rl_HL() },
		0x17: func(c *cpu) uint8 { return c.rl_r(reg_a) },
		0x18: func(c *cpu) uint8 { return c.rr_r(reg_b) },
		0x19: func(c *cpu) uint8 { return c.rr_r(reg_c) },
		0x1A: func(c *cpu) uint8 { return c.rr_r(reg_d) },
		0x1B: func(c *cpu) uint8 { return c.rr_r(reg_e) },
		0x1C: func(c *cpu) uint8 { return c.rr_r(reg_h) },
		0x1D: func(c *cpu) uint8 { return c.rr_r(reg_l) },
		0x1E: func(c *cpu) uint8 { return c.rr_HL() },
		0x1F: func(c *cpu) uint8 { return c.rr_r(reg_a) },
		0x20: func(c *cpu) uint8 { return c.sla_r(reg_b) },
		0x21: func(c *cpu) uint8 { return c.sla_r(reg_c) },
		0x22: func(c *cpu) uint8 { return c.sla_r(reg_d) },
		0x23: func(c *cpu) uint8 { return c.sla_r(reg_e) },
		0x24: func(c *cpu) uint8 { return c.sla_r(reg_h) },
		0x25: func(c *cpu) uint8 { return c.sla_r(reg_l) },
		0x26: func(c *cpu) uint8 { return c.sla_HL() },
		0x27: func(c *cpu) uint8 { return c.sla_r(reg_a) },
		0x28: func(c *cpu) uint8 { return c.sra_r(reg_b) },
		0x29: func(c *cpu) uint8 { return c.sra_r(reg_c) },
		0x2A: func(c *cpu) uint8 { return c.sra_r(reg_d) },
		0x2B: func(c *cpu) uint8 { return c.sra_r(reg_e) },
		0x2C: func(c *cpu) uint8 { return c.sra_r(reg_h) },
		0x2D: func(c *cpu) uint8 { return c.sra_r(reg_l) },
		0x2E: func(c *cpu) uint8 { return c.sra_HL() },
		0x2F: func(c *cpu) uint8 { return c.sra_r(reg_a) },
		0x30: func(c *cpu) uint8 { return c.swap_r(reg_b) },
		0x31: func(c *cpu) uint8 { return c.swap_r(reg_c) },
		0x32: func(c *cpu) uint8 { return c.swap_r(reg_d) },
		0x33: func(c *cpu) uint8 { return c.swap_r(reg_e) },
		0x34: func(c *cpu) uint8 { return c.swap_r(reg_h) },
		0x35: func(c *cpu) uint8 { return c.swap_r(reg_l) },
		0x36: func(c *cpu) uint8 { return c.swap_HL() },
		0x37: func(c *cpu) uint8 { return c.swap_r(reg_a) },
		0x38: func(c *cpu) uint8 { return c.srl_r(reg_b) },
		0x39: func(c *cpu) uint8 { return c.srl_r(reg_c) },
		0x3A: func(c *cpu) uint8 { return c.srl_r(reg_d) },
		0x3B: func(c *cpu) uint8 { return c.srl_r(reg_e) },
		0x3C: func(c *cpu) uint8 { return c.srl_r(reg_h) },
		0x3D: func(c *cpu) uint8 { return c.srl_r(reg_l) },
		0x3E: func(c *cpu) uint8 { return c.srl_HL() },
		0x3F: func(c *cpu) uint8 { return c.srl_r(reg_a) },
		0x40: func(c *cpu) uint8 { return c.bit_n_r(0, reg_b) },
		0x41: func(c *cpu) uint8 { return c.bit_n_r(0, reg_c) },
		0x42: func(c *cpu) uint8 { return c.bit_n_r(0, reg_d) },
		0x43: func(c *cpu) uint8 { return c.bit_n_r(0, reg_e) },
		0x44: func(c *cpu) uint8 { return c.bit_n_r(0, reg_h) },
		0x45: func(c *cpu) uint8 { return c.bit_n_r(0, reg_l) },
		0x46: func(c *cpu) uint8 { return c.bit_n_HL(0) },
		0x47: func(c *cpu) uint8 { return c.bit_n_r(0, reg_a) },
		0x48: func(c *cpu) uint8 { return c.bit_n_r(1, reg_b) },
		0x49: func(c *cpu) uint8 { return c.bit_n_r(1, reg_c) },
		0x4A: func(c *cpu) uint8 { return c.bit_n_r(1, reg_d) },
		0x4B: func(c *cpu) uint8 { return c.bit_n_r(1, reg_e) },
		0x4C: func(c *cpu) uint8 { return c.bit_n_r(1, reg_h) },
		0x4D: func(c *cpu) uint8 { return c.bit_n_r(1, reg_l) },
		0x4E: func(c *cpu) uint8 { return c.bit_n_HL(1) },
		0x4F: func(c *cpu) uint8 { return c.bit_n_r(1, reg_a) },
		0x50: func(c *cpu) uint8 { return c.bit_n_r(2, reg_b) },
		0x51: func(c *cpu) uint8 { return c.bit_n_r(2, reg_c) },
		0x52: func(c *cpu) uint8 { return c.bit_n_r(2, reg_d) },
		0x53: func(c *cpu) uint8 { return c.bit_n_r(2, reg_e) },
		0x54: func(c *cpu) uint8 { return c.bit_n_r(2, reg_h) },
		0x55: func(c *cpu) uint8 { return c.bit_n_r(2, reg_l) },
		0x56: func(c *cpu) uint8 { return c.bit_n_HL(2) },
		0x57: func(c *cpu) uint8 { return c.bit_n_r(2, reg_a) },
		0x58: func(c *cpu) uint8 { return c.bit_n_r(3, reg_b) },
		0x59: func(c *cpu) uint8 { return c.bit_n_r(3, reg_c) },
		0x5A: func(c *cpu) uint8 { return c.bit_n_r(3, reg_d) },
		0x5B: func(c *cpu) uint8 { return c.bit_n_r(3, reg_e) },
		0x5C: func(c *cpu) uint8 { return c.bit_n_r(3, reg_h) },
		0x5D: func(c *cpu) uint8 { return c.bit_n_r(3, reg_l) },
		0x5E: func(c *cpu) uint8 { return c.bit_n_HL(3) },
		0x5F: func(c *cpu) uint8 { return c.bit_n_r(3, reg_a) },
		0x60: func(c *cpu) uint8 { return c.bit_n_r(4, reg_b) },
		0x61: func(c *cpu) uint8 { return c.bit_n_r(4, reg_c) },
		0x62: func(c *cpu) uint8 { return c.bit_n_r(4, reg_d) },
		0x63: func(c *cpu) uint8 { return c.bit_n_r(4, reg_e) },
		0x64: func(c *cpu) uint8 { return c.bit_n_r(4, reg_h) },
		0x65: func(c *cpu) uint8 { return c.bit_n_r(4, reg_l) },
		0x66: func(c *cpu) uint8 { return c.bit_n_HL(4) },
		0x67: func(c *cpu) uint8 { return c.bit_n_r(4, reg_a) },
		0x68: func(c *cpu) uint8 { return c.bit_n_r(5, reg_b) },
		0x69: func(c *cpu) uint8 { return c.bit_n_r(5, reg_c) },
		0x6A: func(c *cpu) uint8 { return c.bit_n_r(5, reg_d) },
		0x6B: func(c *cpu) uint8 { return c.bit_n_r(5, reg_e) },
		0x6C: func(c *cpu) uint8 { return c.bit_n_r(5, reg_h) },
		0x6D: func(c *cpu) uint8 { return c.bit_n_r(5, reg_l) },
		0x6E: func(c *cpu) uint8 { return c.bit_n_HL(5) },
		0x6F: func(c *cpu) uint8 { return c.bit_n_r(5, reg_a) },
		0x70: func(c *cpu) uint8 { return c.bit_n_r(6, reg_b) },
		0x71: func(c *cpu) uint8 { return c.bit_n_r(6, reg_c) },
		0x72: func(c *cpu) uint8 { return c.bit_n_r(6, reg_d) },
		0x73: func(c *cpu) uint8 { return c.bit_n_r(6, reg_e) },
		0x74: func(c *cpu) uint8 { return c.bit_n_r(6, reg_h) },
		0x75: func(c *cpu) uint8 { return c.bit_n_r(6, reg_l) },
		0x76: func(c *cpu) uint8 { return c.bit_n_HL(6) },
		0x77: func(c *cpu) uint8 { return c.bit_n_r(6, reg_a) },
		0x78: func(c *cpu) uint8 { return c.bit_n_r(7, reg_b) },
		0x79: func(c *cpu) uint8 { return c.bit_n_r(7, reg_c) },
		0x7A: func(c *cpu) uint8 { return c.bit_n_r(7, reg_d) },
		0x7B: func(c *cpu) uint8 { return c.bit_n_r(7, reg_e) },
		0x7C: func(c *cpu) uint8 { return c.bit_n_r(7, reg_h) },
		0x7D: func(c *cpu) uint8 { return c.bit_n_r(7, reg_l) },
		0x7E: func(c *cpu) uint8 { return c.bit_n_HL(7) },
		0x7F: func(c *cpu) uint8 { return c.bit_n_r(7, reg_a) },
		0x80: func(c *cpu) uint8 { return c.res_n_r(0, reg_b) },
		0x81: func(c *cpu) uint8 { return c.res_n_r(0, reg_c) },
		0x82: func(c *cpu) uint8 { return c.res_n_r(0, reg_d) },
		0x83: func(c *cpu) uint8 { return c.res_n_r(0, reg_e) },
		0x84: func(c *cpu) uint8 { return c.res_n_r(0, reg_h) },
		0x85: func(c *cpu) uint8 { return c.res_n_r(0, reg_l) },
		0x86: func(c *cpu) uint8 { return c.res_n_HL(0) },
		0x87: func(c *cpu) uint8 { return c.res_n_r(0, reg_a) },
		0x88: func(c *cpu) uint8 { return c.res_n_r(1, reg_b) },
		0x89: func(c *cpu) uint8 { return c.res_n_r(1, reg_c) },
		0x8A: func(c *cpu) uint8 { return c.res_n_r(1, reg_d) },
		0x8B: func(c *cpu) uint8 { return c.res_n_r(1, reg_e) },
		0x8C: func(c *cpu) uint8 { return c.res_n_r(1, reg_h) },
		0x8D: func(c *cpu) uint8 { return c.res_n_r(1, reg_l) },
		0x8E: func(c *cpu) uint8 { return c.res_n_HL(1) },
		0x8F: func(c *cpu) uint8 { return c.res_n_r(1, reg_a) },
		0x90: func(c *cpu) uint8 { return c.res_n_r(2, reg_b) },
		0x91: func(c *cpu) uint8 { return c.res_n_r(2, reg_c) },
		0x92: func(c *cpu) uint8 { return c.res_n_r(2, reg_d) },
		0x93: func(c *cpu) uint8 { return c.res_n_r(2, reg_e) },
		0x94: func(c *cpu) uint8 { return c.res_n_r(2, reg_h) },
		0x95: func(c *cpu) uint8 { return c.res_n_r(2, reg_l) },
		0x96: func(c *cpu) uint8 { return c.res_n_HL(2) },
		0x97: func(c *cpu) uint8 { return c.res_n_r(2, reg_a) },
		0x98: func(c *cpu) uint8 { return c.res_n_r(3, reg_b) },
		0x99: func(c *cpu) uint8 { return c.res_n_r(3, reg_c) },
		0x9A: func(c *cpu) uint8 { return c.res_n_r(3, reg_d) },
		0x9B: func(c *cpu) uint8 { return c.res_n_r(3, reg_e) },
		0x9C: func(c *cpu) uint8 { return c.res_n_r(3, reg_h) },
		0x9D: func(c *cpu) uint8 { return c.res_n_r(3, reg_l) },
		0x9E: func(c *cpu) uint8 { return c.res_n_HL(3) },
		0x9F: func(c *cpu) uint8 { return c.res_n_r(3, reg_a) },
		0xA0: func(c *cpu) uint8 { return c.res_n_r(4, reg_b) },
		0xA1: func(c *cpu) uint8 { return c.res_n_r(4, reg_c) },
		0xA2: func(c *cpu) uint8 { return c.res_n_r(4, reg_d) },
		0xA3: func(c *cpu) uint8 { return c.res_n_r(4, reg_e) },
		0xA4: func(c *cpu) uint8 { return c.res_n_r(4, reg_h) },
		0xA5: func(c *cpu) uint8 { return c.res_n_r(4, reg_l) },
		0xA6: func(c *cpu) uint8 { return c.res_n_HL(4) },
		0xA7: func(c *cpu) uint8 { return c.res_n_r(4, reg_a) },
		0xA8: func(c *cpu) uint8 { return c.res_n_r(5, reg_b) },
		0xA9: func(c *cpu) uint8 { return c.res_n_r(5, reg_c) },
		0xAA: func(c *cpu) uint8 { return c.res_n_r(5, reg_d) },
		0xAB: func(c *cpu) uint8 { return c.res_n_r(5, reg_e) },
		0xAC: func(c *cpu) uint8 { return c.res_n_r(5, reg_h) },
		0xAD: func(c *cpu) uint8 { return c.res_n_r(5, reg_l) },
		0xAE: func(c *cpu) uint8 { return c.res_n_HL(5) },
		0xAF: func(c *cpu) uint8 { return c.res_n_r(5, reg_a) },
		0xB0: func(c *cpu) uint8 { return c.res_n_r(6, reg_b) },
		0xB1: func(c *cpu) uint8 { return c.res_n_r(6, reg_c) },
		0xB2: func(c *cpu) uint8 { return c.res_n_r(6, reg_d) },
		0xB3: func(c *cpu) uint8 { return c.res_n_r(6, reg_e) },
		0xB4: func(c *cpu) uint8 { return c.res_n_r(6, reg_h) },
		0xB5: func(c *cpu) uint8 { return c.res_n_r(6, reg_l) },
		0xB6: func(c *cpu) uint8 { return c.res_n_HL(6) },
		0xB7: func(c *cpu) uint8 { return c.res_n_r(6, reg_a) },
		0xB8: func(c *cpu) uint8 { return c.res_n_r(7, reg_b) },
		0xB9: func(c *cpu) uint8 { return c.res_n_r(7, reg_c) },
		0xBA: func(c *cpu) uint8 { return c.res_n_r(7, reg_d) },
		0xBB: func(c *cpu) uint8 { return c.res_n_r(7, reg_e) },
		0xBC: func(c *cpu) uint8 { return c.res_n_r(7, reg_h) },
		0xBD: func(c *cpu) uint8 { return c.res_n_r(7, reg_l) },
		0xBE: func(c *cpu) uint8 { return c.res_n_HL(7) },
		0xBF: func(c *cpu) uint8 { return c.res_n_r(7, reg_a) },
		0xC0: func(c *cpu) uint8 { return c.set_n_r(0, reg_b) },
		0xC1: func(c *cpu) uint8 { return c.set_n_r(0, reg_c) },
		0xC2: func(c *cpu) uint8 { return c.set_n_r(0, reg_d) },
		0xC3: func(c *cpu) uint8 { return c.set_n_r(0, reg_e) },
		0xC4: func(c *cpu) uint8 { return c.set_n_r(0, reg_h) },
		0xC5: func(c *cpu) uint8 { return c.set_n_r(0, reg_l) },
		0xC6: func(c *cpu) uint8 { return c.set_n_HL(0) },
		0xC7: func(c *cpu) uint8 { return c.set_n_r(0, reg_a) },
		0xC8: func(c *cpu) uint8 { return c.set_n_r(1, reg_b) },
		0xC9: func(c *cpu) uint8 { return c.set_n_r(1, reg_c) },
		0xCA: func(c *cpu) uint8 { return c.set_n_r(1, reg_d) },
		0xCB: func(c *cpu) uint8 { return c.set_n_r(1, reg_e) },
		0xCC: func(c *cpu) uint8 { return c.set_n_r(1, reg_h) },
		0xCD: func(c *cpu) uint8 { return c.set_n_r(1, reg_l) },
		0xCE: func(c *cpu) uint8 { return c.set_n_HL(1) },
		0xCF: func(c *cpu) uint8 { return c.set_n_r(1, reg_a) },
		0xD0: func(c *cpu) uint8 { return c.set_n_r(2, reg_b) },
		0xD1: func(c *cpu) uint8 { return c.set_n_r(2, reg_c) },
		0xD2: func(c *cpu) uint8 { return c.set_n_r(2, reg_d) },
		0xD3: func(c *cpu) uint8 { return c.set_n_r(2, reg_e) },
		0xD4: func(c *cpu) uint8 { return c.set_n_r(2, reg_h) },
		0xD5: func(c *cpu) uint8 { return c.set_n_r(2, reg_l) },
		0xD6: func(c *cpu) uint8 { return c.set_n_HL(2) },
		0xD7: func(c *cpu) uint8 { return c.set_n_r(2, reg_a) },
		0xD8: func(c *cpu) uint8 { return c.set_n_r(3, reg_b) },
		0xD9: func(c *cpu) uint8 { return c.set_n_r(3, reg_c) },
		0xDA: func(c *cpu) uint8 { return c.set_n_r(3, reg_d) },
		0xDB: func(c *cpu) uint8 { return c.set_n_r(3, reg_e) },
		0xDC: func(c *cpu) uint8 { return c.set_n_r(3, reg_h) },
		0xDD: func(c *cpu) uint8 { return c.set_n_r(3, reg_l) },
		0xDE: func(c *cpu) uint8 { return c.set_n_HL(3) },
		0xDF: func(c *cpu) uint8 { return c.set_n_r(3, reg_a) },
		0xE0: func(c *cpu) uint8 { return c.set_n_r(4, reg_b) },
		0xE1: func(c *cpu) uint8 { return c.set_n_r(4, reg_c) },
		0xE2: func(c *cpu) uint8 { return c.set_n_r(4, reg_d) },
		0xE3: func(c *cpu) uint8 { return c.set_n_r(4, reg_e) },
		0xE4: func(c *cpu) uint8 { return c.set_n_r(4, reg_h) },
		0xE5: func(c *cpu) uint8 { return c.set_n_r(4, reg_l) },
		0xE6: func(c *cpu) uint8 { return c.set_n_HL(4) },
		0xE7: func(c *cpu) uint8 { return c.set_n_r(4, reg_a) },
		0xE8: func(c *cpu) uint8 { return c.set_n_r(5, reg_b) },
		0xE9: func(c *cpu) uint8 { return c.set_n_r(5, reg_c) },
		0xEA: func(c *cpu) uint8 { return c.set_n_r(5, reg_d) },
		0xEB: func(c *cpu) uint8 { return c.set_n_r(5, reg_e) },
		0xEC: func(c *cpu) uint8 { return c.set_n_r(5, reg_h) },
		0xED: func(c *cpu) uint8 { return c.set_n_r(5, reg_l) },
		0xEE: func(c *cpu) uint8 { return c.set_n_HL(5) },
		0xEF: func(c *cpu) uint8 { return c.set_n_r(5, reg_a) },
		0xF0: func(c *cpu) uint8 { return c.set_n_r(6, reg_b) },
		0xF1: func(c *cpu) uint8 { return c.set_n_r(6, reg_c) },
		0xF2: func(c *cpu) uint8 { return c.set_n_r(6, reg_d) },
		0xF3: func(c *cpu) uint8 { return c.set_n_r(6, reg_e) },
		0xF4: func(c *cpu) uint8 { return c.set_n_r(6, reg_h) },
		0xF5: func(c *cpu) uint8 { return c.set_n_r(6, reg_l) },
		0xF6: func(c *cpu) uint8 { return c.set_n_HL(6) },
		0xF7: func(c *cpu) uint8 { return c.set_n_r(6, reg_a) },
		0xF8: func(c *cpu) uint8 { return c.set_n_r(7, reg_b) },
		0xF9: func(c *cpu) uint8 { return c.set_n_r(7, reg_c) },
		0xFA: func(c *cpu) uint8 { return c.set_n_r(7, reg_d) },
		0xFB: func(c *cpu) uint8 { return c.set_n_r(7, reg_e) },
		0xFC: func(c *cpu) uint8 { return c.set_n_r(7, reg_h) },
		0xFD: func(c *cpu) uint8 { return c.set_n_r(7, reg_l) },
		0xFE: func(c *cpu) uint8 { return c.set_n_HL(7) },
		0xFF: func(c *cpu) uint8 { return c.set_n_r(7, reg_a) },
	}
)
